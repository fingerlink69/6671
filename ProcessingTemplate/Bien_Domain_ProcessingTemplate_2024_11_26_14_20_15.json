
[
  {
    "domainClass": "ProcessingTemplate",
    "id": "[Bien_Domain]ACCESS-MGMT.SATS-IAM.GBL.JREST",
    "simpleId": "ACCESS-MGMT.SATS-IAM.GBL.JREST",
    "processingType": "TASK",
    "node": "AnowEngine.Rest.rr",
    "preloadCounter": 0,
    "processingCommand": {
      "headers": "Authorization=${AD_token}\nmediaType=application/json\nrequestDataSource=text\nresponseTimeout=60\n",
      "method": "POST",
      "resultVariableLevel": "SELF",
      "body": "",
      "url": "SATSAccessManagement?Action=${ACTION#}&Role=${MAPPED_ROLE#}&SiteName=${SITENAME#}&UserAccount=${USERACCOUNT#}"
    },
    "keepResourcesOnFailure": false,
    "onHold": false,
    "tags": 
    [
      "SATS-IAM"
    ],
    "preScript": ":PSET &ReqIT_action# = JSON_GET_VALUE(&CAT_ITEM_VARIABLES#, $.order_type)\n:PSET &Action# = GET_VAR(VARA.ORDER.SATS-IAM.V, &ReqIT_action#,1)\n\n:if &Action# = \"ADD\" or \"MODIFY\"\n\n:PSET &UserAccount# = &Requested_For#\n:PSET &SiteName# = JSON_GET_VALUE(&CAT_ITEM_VARIABLES#, $.site_name)\n:PSET &Role# = JSON_GET_VALUE(&CAT_ITEM_VARIABLES#, $.role)\n:SET &ROLE_VAR# = STR_SUBSTITUTE(\"&ROLE#\", ' ', '_')\n:PRINT &ROLE_VAR#\n\n:IF &Role# <> ''\n:  PSET &Mapped_Role# = GET_VAR(VARA.ROLE.SATS-IAM.V, \"&ROLE_VAR#\",\"1\")\n:ELSE\n:  PSET &Mapped_Role#=''\n:ENDIF\n:PSET &ReqIT_action# = JSON_GET_VALUE(&CAT_ITEM_VARIABLES#, $.order_type)\n!: EXIT\n:ELSE\n:PSET &UserAccount# = &Requested_For#\n:PSET &Role# = JSON_GET_VALUE(&CAT_ITEM_VARIABLES#, $.delete_role)\n:IF &Role# <> ''\n:  PSET &Mapped_Role#  = GET_VAR(VARA.ROLE.SATS-IAM.V, \"&ROLE_VAR#\",\"1\")\n:  IF STR_LC(&Role#) <> 'please choose role to delete'\n:    IF &Mapped_Role#  = ''\n:      PSET &MESSAGE# = 'Unsupported Role'\n:      PSET &NOTES#=&MESSAGE#\n:      EXIT 1\n:    ENDIF\n:  ENDIF\n:ELSE\n:  PSET &Mapped_Role#=''\n:ENDIF\n\n!: EXIT\n:endif",
    "highRisk": false,
    "weight": "1",
    "taskType": "REST_WEB_SERVICE_CALL",
    "priority": "0",
    "endpoint": "Ad.SATS-IAM.ep",
    "passBy": false,
    "lazyLoad": false,
    "customFieldValues": {
    },
    "postScript": ":PSET &RET_CODE# = 0\n\n:IF &MESSAGE# = 'Unsupported Role'\n:   PSET &EXT_NOTES# = &MESSAGE#\n:   PSET &NOTES# = &EXT_NOTES#\n:   SET &RET_CODE# = 1\n:   MODIFY_STATE STATUS_TEXT = &MESSAGE#\n:   PUB &EXT_NOTES#, , \"TOP\"\n:   PUB &RET_CODE#, , \"TOP\"\n:   PUB &EXT_NOTES#,, \"TOP\"\n:ELSE\n:   PSET &NOTES# = &EXT_NOTES#\n:   PSET &RET_CODE# = &RET_CODE#\n:   PSET &EXT_NOTES# = &EXT_NOTES#\n:   PUB &RET_CODE#,, \"TOP\"\n:   PUB &EXT_NOTES#,, \"TOP\"\n:   PUB &NOTES#,, \"TOP\"\n:ENDIF\n\n!Workaround for &ASSIGNMENT_GROUP_ORG#\n:S &ASSIGNMENT_GROUP_ORG# = &ASSIGNMENT_GROUP#\n:PUB &ASSIGNMENT_GROUP_ORG#,, \"TOP\"",
    "serverNodeType": "REST_WEB_SERVICE",
    "verboseMode": false,
    "eagerScriptExecution": false,
    "passResourceDependenciesToChildren": false,
    "domain": "Bien_Domain",
    "endpointType": "REST_WEB_SERVICE",
    "autoArchive": false,
    "useScripts": true,
    "sequentialProcessing": false,
    "owner": "jakub.szeliga@infinitedata.com",
    "turnOffDurationEstimation": false,
    "passActionsToChildren": false,
    "designParameters": 
    [
      {
        "domainClass": "DesignParameter",
        "designObjectType": "PROCESSING",
        "saveValueToResource": false,
        "addNewValues": false,
        "defaultValue": "ENCRYPTED::ExEbEQwFCBEMEQkTBQUJDAoRBQUFBRgQCRAPChEKAQoJDBEMBQUNBQUMBRARCgwMCwoBChsFDwobDA0FEQUFERYRExEQBQsKCAwTDBgFEAUbDAkFEQUNERgRExA=",
        "sortOrder": 0,
        "designObjectId": "ACCESS-MGMT.SATS-IAM.GBL.JREST",
        "addUnknownValues": false,
        "name": "AD_token",
        "required": false,
        "domain": "Bien_Domain",
        "allowExpressions": false,
        "editorType": "PASSWORD",
        "evaluateExpressions": false,
        "title": "AD_token"
      },
      {
        "domainClass": "DesignParameter",
        "outputFormat": "JSON",
        "designObjectType": "PROCESSING",
        "saveValueToResource": false,
        "addNewValues": false,
        "sortOrder": 0,
        "designObjectId": "ACCESS-MGMT.SATS-IAM.GBL.JREST",
        "addUnknownValues": false,
        "name": "API_JSON_OUTPUT#",
        "required": false,
        "outputDefinition": {
          "dataPath": "$"
        },
        "domain": "Bien_Domain",
        "allowExpressions": false,
        "editorType": "OUTPUT",
        "evaluateExpressions": false,
        "title": "&API_JSON_OUTPUT#"
      },
      {
        "domainClass": "DesignParameter",
        "outputFormat": "JSON",
        "designObjectType": "PROCESSING",
        "saveValueToResource": false,
        "addNewValues": false,
        "sortOrder": 1,
        "designObjectId": "ACCESS-MGMT.SATS-IAM.GBL.JREST",
        "addUnknownValues": false,
        "name": "EXT_NOTES#",
        "required": false,
        "outputDefinition": {
          "dataPath": ".result"
        },
        "domain": "Bien_Domain",
        "allowExpressions": false,
        "editorType": "OUTPUT",
        "evaluateExpressions": false,
        "title": "&EXT_NOTES#"
      },
      {
        "domainClass": "DesignParameter",
        "outputFormat": "JSON",
        "designObjectType": "PROCESSING",
        "saveValueToResource": false,
        "addNewValues": false,
        "sortOrder": 2,
        "designObjectId": "ACCESS-MGMT.SATS-IAM.GBL.JREST",
        "addUnknownValues": false,
        "name": "RET_CODE#",
        "required": false,
        "outputDefinition": {
          "dataPath": ".ReturnCode"
        },
        "domain": "Bien_Domain",
        "allowExpressions": false,
        "editorType": "OUTPUT",
        "evaluateExpressions": false,
        "title": "&RET_CODE#"
      }
    ]
  },
  {
    "domainClass": "ProcessingTemplate",
    "id": "[Bien_Domain]EH-UPDATE-RITM.GSN.REQIT.REST",
    "simpleId": "EH-UPDATE-RITM.GSN.REQIT.REST",
    "processingType": "TASK",
    "node": "AnowEngine.Rest.rr",
    "preloadCounter": 0,
    "processingCommand": {
      "headers": "Content-type=application/json\nresponseTimeout=60\n",
      "method": "PUT",
      "resultVariableLevel": "SELF",
      "body": "{\n  \"ritm\":\"${RITM}\",\n  \"status\":\"${STATUS#}\",\n  \"assignment_group\":\"${ASSIGNMENT_GROUP#}\",\n  \"notes\": \"${NOTES#}\",\n  \"external_notes\": \"${EXT_NOTES#}\",\n  \"description\": \"${DESCRIPTION#}\",\n  \"short_description\": \"${SHORT_DESCRIPTION#}\",\n  \"business_service\": \"${BUSINESS_SERVICE#}\",\n  \"output\": ${OUTPUT#}\n}",
      "url": "/api/dpit2/req_item/update_wf"
    },
    "keepResourcesOnFailure": false,
    "onHold": false,
    "tags": 
    [
      "REQIT",
      "NotMonitored"
    ],
    "preScript": "!-----------------------------------------------------------------------------------------------------------------------------------------------------------\n! Main Process:\n!-----------------------------------------------------------------------------------------------------------------------------------------------------------\n\n:IF &STATUS# = \"\"\n!  -----------------------------------------------------------------------------------------------------------------------------------------------------------\n!  DEFAULT SCENARIO\n!  status 'incomplete' in RequestIT API interface (closed incomplete) - request can't be fulfilled but it's prefered to close it\n\n!  allowed by interface - other parameters will be ingnored\n\n!  &RTIM#    - comes as an input parameter from RequestIT\n:  SET &STATUS# = \"incomplete\"\n:  SET &EXT_NOTES# = &EXT_NOTES#\n:  SET &OUTPUT# = &OUTPUT#\n\n:ELSE\n\n!-----------------------------------------------------------------------------------------------------------------------------------------------------------\n!PLEASE SET &STATUS# = \"skipped\" in the main fulfillment workflow to use extended functionality\n!status 'skipped' in RequestIT API interface (open) - request cannot be fullfilled and it requires a manual follow-up\n\n!&RTIM#    - comes as an input parameter from RequestIT\n:S &STATUS# = \"skipped\"\n\n!    &ASSIGNMENT_GROUP# - preffered value: GSN:GroupL1 from METADATA.<service name>.DSKV - to be defined in the fulfillment, before Standard Feedback\n:    IF &ASSIGNMENT_GROUP# = \"\" OR \" \"\n!      Split the main worklfow name\n:      D &WORKFLOW_ID_STR#,string,10\n:      FILL &WORKFLOW_ID_STR#[]= STR_SPLIT(&WORKFLOW_ID#,\".\")\n:      S &LAST_INDEX# = LENGTH(&WORKFLOW_ID_STR#[],SIZE)\n:      S &SERVICE_NAME_POS# = &LAST_INDEX#-1\n:      S &SERVICE_NAME# = &WORKFLOW_ID_STR#[&SERVICE_NAME_POS#]\n\n!      Check if METADATA VARA table exists\n:      S &T_METADATA1# = \"Metadata.&SERVICE_NAME#.dskv\"\n:      S &CHECK_METADATA1# = GET_OH_IDNR(&T_METADATA1#)\n:      S &T_METADATA2# = \"Metadata._&SERVICE_NAME#_.dskv\"\n:      S &CHECK_METADATA2# = GET_OH_IDNR(&T_METADATA2#)\n\n!      Key of the L1 support group from METADATA json (data source key value)\n:      S &METADATA_KEY# = \"GroupL1\"\n\n:      SWITCH \"Y\"\n:        CASE &CHECK_METADATA1# <> 0\n:          S &METADATA_KEY_JSON1# = \"${KVS::&T_METADATA1#(GSN)}\"\n:          S &ASSIGNMENT_GROUP# = JSON_GET_VALUE(&METADATA_KEY_JSON1#,$.&METADATA_KEY#)\n:          S &ASSIGNMENT_GROUP# = STR_TRIM(&ASSIGNMENT_GROUP#)\n:        CASE &CHECK_METADATA2# <> 0\n:          S &METADATA_KEY_JSON2# = \"${KVS::&T_METADATA2#(GSN)}\"\n:          S &ASSIGNMENT_GROUP# = JSON_GET_VALUE(&METADATA_KEY_JSON2#,$.&METADATA_KEY#)\n:          S &ASSIGNMENT_GROUP# = STR_TRIM(&ASSIGNMENT_GROUP#)\n:        OTHER\n:        P \"--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\"\n:        P \"Error: METADATA.&SERVICE_NAME#.DSKV does not exist. Create the table and add a proper value for &METADATA_KEY# to use the default L1 as the Assignment Group for 'skipped' status (new SCTASK to be created under &RITM#).\"\n:        P \"If you want to use a different group than default L1 from METADATA.&SERVICE_NAME#.DSKV, please define it in the fulfillment and pass to Standard Feedback.\"\n:        P \"--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\"\n:        S &ERROR_MSG# = \"Error: METADATA table not found!\"\n:        P &ERROR_MSG#\n:        STOP MSG, 50, &ERROR_MSG#\n:      ENDSWITCH\n:    ELSE\n:      S &ASSIGNMENT_GROUP# = &ASSIGNMENT_GROUP#\n:    ENDIF\n\n:    IF &DESCRIPTION# = \"\" OR \" \"\n:      S &DESCRIPTION# = \"AUTOMATION FAILED: Unsuccessfully processed by Automation, needs to be checked manually\"\n:    ELSE\n:      S &DESCRIPTION# = &DESCRIPTION#\n:    ENDIF\n:    S &DELIMITER# = \"=======================================================================================\"\n:    S &STR1# = \"Set SCTASK status to Closed Skipped if the task has been successfully completed manually and no automation is needed (RITM Closed Complete).\"\n:    S &STR2# = \"Set SCTASK status to Closed Complete if repeated processing by the automation workflow is needed (RITM will be resent to Automic).\"\n:    S &STR3# = \"Set SCTASK status to Closed Incomplete if no fix is possible, neither manually nor by automation (RITM closed incomplete).\"\n:    S &DESCRIPTION_FOOTER# = \"&NL#&DELIMITER#&NL#&STR1#&NL#&STR2#&NL#&STR3#\"\n:    S &DESCRIPTION# = STR_CAT(&DESCRIPTION#,&DESCRIPTION_FOOTER#)\n\n\n:    IF &SHORT_DESCRIPTION# = \"\" OR \" \"\n:      S &Cat_Item_Name# = JSON_GET_VALUE(&Cat_Item_Variables#, $.cat_item.name)\n:      S &SHORT_DESCRIPTION# = \"ERROR: &Cat_Item_Name#\"\n:    ELSE\n:      S &SHORT_DESCRIPTION# = &SHORT_DESCRIPTION#\n:    ENDIF\n\n:    S &EXT_NOTES# = &EXT_NOTES#\n\n:    S &BUSINESS_SERVICE# = &BUSINESS_SERVICE#\n:    S &NOTES# = &NOTES#\n:    S &OUTPUT# = &OUTPUT#\n\n:ENDIF\n\n:P \"====================================================================================================================================================================================\"\n:P \"Status:  '&STATUS#'\"\n\n:S &REQ_TEXT# = &NOTES#\n:INC REPLACE-FORBIDDEN-CHARACTERS.REQIT.INCL\n:S &NOTES# = &REQ_TEXT#\n\n:S &REQ_TEXT# = &EXT_NOTES#\n:INC REPLACE-FORBIDDEN-CHARACTERS.REQIT.INCL\n:S &EXT_NOTES# = &REQ_TEXT#\n\n:S &REQ_TEXT# = &DESCRIPTION#\n:INC REPLACE-FORBIDDEN-CHARACTERS.REQIT.INCL\n:S &DESCRIPTION# = &REQ_TEXT#\n\n:S &REQ_TEXT# = &SHORT_DESCRIPTION#\n:INC REPLACE-FORBIDDEN-CHARACTERS.REQIT.INCL\n:S &SHORT_DESCRIPTION# = &REQ_TEXT#\n\n!Output (expected json) always empty to avoid errors when ouptut formatted and to push error handling feedback\n:S &OUTPUT# = \"{}\"\n\n!To add variables to Context Variables of the job\n:PUB &EXT_NOTES#,, \"TOP\"\n:PUB &NOTES#,, \"TASK\"\n:PUB &DESCRIPTION#,,\"TASK\"\n:PUB &SHORT_DESCRIPTION#,,\"TASK\"\n:PUB &ASSIGNMENT_GROUP#,,\"TASK\"\n:PUB &BUSINESS_SERVICE#,,\"TASK\"\n:PUB &OUTPUT#,,\"TASK\"\n\n:PUB &STATUS#,,\"TOP\"",
    "highRisk": false,
    "weight": "1",
    "taskType": "REST_WEB_SERVICE_CALL",
    "priority": "0",
    "endpoint": "MainRest.Gsn.Gbl.ep",
    "passBy": false,
    "lazyLoad": false,
    "customFieldValues": {
    },
    "serverNodeType": "REST_WEB_SERVICE",
    "verboseMode": false,
    "eagerScriptExecution": false,
    "passResourceDependenciesToChildren": false,
    "domain": "Bien_Domain",
    "endpointType": "REST_WEB_SERVICE",
    "autoArchive": false,
    "useScripts": true,
    "sequentialProcessing": false,
    "owner": "rrogozin",
    "turnOffDurationEstimation": false,
    "folder": "REQIT",
    "passActionsToChildren": false,
    "actions": 
    [
      {
        "domainClass": "ProcessingTemplateAction",
        "processingEventType": "PROCESSING_FAILED",
        "condition": {
          "criteria": 
          [
            {
              "fieldName": "timesRestarted",
              "value": "3",
              "operator": "EQ_NUM"
            }
          ],
          "operator": "AND"
        },
        "workflow": "[Bien_Domain]EH-UPDATE-RITM.GSN.REQIT.REST",
        "processingEventCategory": "PROCESSING",
        "processingActionOrder": 2,
        "skip": false,
        "processingActionType": "SET_CONTEXT_VARIABLE_VALUE",
        "domain": "Bien_Domain",
        "processingCommand": {
          "variable": "EHTrigger",
          "actionTargetType": "RELATED",
          "keepForcedStatus": true,
          "value": 1,
          "operator": "SET_NUM",
          "restartType": "RESTART_FROM_BEGINNING",
          "relation": {
            "relationType": "ROOT"
          }
        }
      },
      {
        "domainClass": "ProcessingTemplateAction",
        "processingEventType": "PROCESSING_FAILED",
        "condition": {
          "criteria": 
          [
            {
              "fieldName": "timesRestarted",
              "value": "3",
              "operator": "LT_NUM"
            }
          ],
          "operator": "AND"
        },
        "workflow": "[Bien_Domain]EH-UPDATE-RITM.GSN.REQIT.REST",
        "processingEventCategory": "PROCESSING",
        "processingActionOrder": 3,
        "skip": false,
        "processingActionType": "SET_CONTEXT_VARIABLE_VALUE",
        "domain": "Bien_Domain",
        "processingCommand": {
          "variable": "EHTrigger",
          "actionTargetType": "RELATED",
          "keepForcedStatus": true,
          "value": 0,
          "operator": "SET_NUM",
          "restartType": "RESTART_FROM_BEGINNING",
          "relation": {
            "relationType": "ROOT"
          }
        }
      },
      {
        "domainClass": "ProcessingTemplateAction",
        "processingEventType": "PROCESSING_FAILED",
        "workflow": "[Bien_Domain]EH-UPDATE-RITM.GSN.REQIT.REST",
        "processingEventCategory": "PROCESSING",
        "processingActionOrder": 0,
        "skip": false,
        "processingActionType": "RESTART",
        "domain": "Bien_Domain",
        "processingCommand": {
          "restartMode": "COUNTER",
          "restartCounter": 3,
          "restartDelay": 300000,
          "restartDelayMode": "FINISH_TO_START",
          "actionTargetType": "SELF",
          "restartFailedOnly": false,
          "keepForcedStatus": true,
          "operator": "",
          "restartType": "RESTART_FROM_BEGINNING"
        }
      },
      {
        "domainClass": "ProcessingTemplateAction",
        "processingEventType": "PROCESSING_FAILED",
        "condition": {
          "criteria": 
          [
            {
              "fieldName": "timesRestarted",
              "value": "3",
              "operator": "EQ_NUM"
            }
          ],
          "operator": "AND"
        },
        "workflow": "[Bien_Domain]EH-UPDATE-RITM.GSN.REQIT.REST",
        "processingEventCategory": "PROCESSING",
        "processingActionOrder": 1,
        "skip": false,
        "processingActionType": "REMOVE_TAG",
        "domain": "Bien_Domain",
        "processingCommand": {
          "actionTargetType": "SELF",
          "keepForcedStatus": true,
          "value": "NotMonitored",
          "operator": "",
          "restartType": "RESTART_FROM_BEGINNING"
        }
      }
    ],
    "dependencies": 
    [
      {
        "domainClass": "ProcessingTemplateDependency",
        "processingType": "TASK",
        "groupId": "44e4ec47-dd8a-4a02-ace2-cd0f1992c56e",
        "resource": "ServiceNow.Gbl.sem",
        "serverNodeType": "REST_WEB_SERVICE",
        "dependencyType": "RESOURCE",
        "name": "ServiceNow.Gbl.sem",
        "domain": "Bien_Domain",
        "processingStatus": "COMPLETED",
        "workflow": "[Bien_Domain]EH-UPDATE-RITM.GSN.REQIT.REST",
        "resourceType": "BINARY_SEMAPHORE",
        "sortKey": "03.BINARY_SEMAPHORE.ServiceNow.Gbl.sem",
        "taskType": "REST_WEB_SERVICE_CALL",
        "semaphoreState": "ON"
      }
    ]
  },
  {
    "domainClass": "ProcessingTemplate",
    "id": "[Bien_Domain]EH-UPDATE-SCTASK.GSN.REQIT.REST",
    "simpleId": "EH-UPDATE-SCTASK.GSN.REQIT.REST",
    "processingType": "TASK",
    "node": "AnowEngine.Rest.rr",
    "preloadCounter": 0,
    "processingCommand": {
      "headers": "Content-type=application/json\nrequestDataSource=text\nresponseTimeout=60\n",
      "method": "PUT",
      "resultVariableLevel": "SELF",
      "body": "{\n  \"ritm\":\"${RITM}\",\n  \"status\":\"${STATUS#}\",\n  \"sc_task\":\"${SCTASK}\",\n  \"assignment_group\":\"${ASSIGNMENT_GROUP#}\",\n  \"assigned_to\": \"${ASSIGNED_TO#}\",\n  \"notes\": \"${NOTES#}\",\n  \"external_notes\": \"${EXT_NOTES#}\",\n  \"description\": \"${DESCRIPTION#}\",\n  \"short_description\": \"${SHORT_DESCRIPTION#}\",\n  \"business_service\": \"${BUSINESS_SERVICE#}\",\n  \"output\": ${OUTPUT#}\n}",
      "url": "/api/dpit2/req_item/update_sctask"
    },
    "keepResourcesOnFailure": false,
    "onHold": false,
    "tags": 
    [
      "REQIT",
      "NotMonitored"
    ],
    "preScript": "!-----------------------------------------------------------------------------------------------------------------------------------------------------------\n! Main Process:\n!-----------------------------------------------------------------------------------------------------------------------------------------------------------\n\n!-----------------------------------------------------------------------------------------------------------------------------------------------------------\n!status 'skipped' in RequestIT API interface (open) - request can not be fullfilled and it requires a manual follow-up\n!    allowed by interface - other parameters will be ingnored\n\n!    &RTIM#    - comes as an input parameter from RequestIT\n!    &SC_TASK# - comes as an input parameter from RequestIT\n:    S &STATUS# = \"skipped\"\n:    IF &ASSIGNMENT_GROUP#  = \"\" OR \" \"\n:      S &ASSIGNMENT_GROUP# = &ASSIGNMENT_GROUP_ORG#\n!      Change to original assignee or blank\n:      S &ASSIGNED_TO# = &ASSIGNED_TO_ORG#\n:    ELSE\n!      Custom value if needed (Assigned_to must be empty in this case)\n:      S &ASSIGNMENT_GROUP# = &ASSIGNMENT_GROUP#\n:      S &ASSIGNED_TO# = \"\"\n:    ENDIF\n\n:    S &NOTES# = &NOTES#\n:    S &EXT_NOTES# = &EXT_NOTES#\n\n:    IF &DESCRIPTION# = \"\" OR \" \"\n:      S &DELIMITER# = \"=======================================================================================\"\n:      IF &DESCRIPTION_ORG# = \"\" OR \" \"\n:        S &DESCRIPTION# = \"AUTOMATION FAILED: Unsuccessfully processed by Automation, needs to be checked manually\"\n:      ELSE\n:        S &DESCRIPTION# = \"&DESCRIPTION_ORG#&NL#&DELIMITER#&NL#AUTOMATION FAILED: Unsuccessfully processed by Automation, needs to be checked manually\"\n:      ENDIF\n:      S &STR1# = \"SCTASK Closed Complete -> RITM Closed Complete\"\n:      S &STR2# = \"SCTASK Closed Incomplete -> RITM Closed Incomplete\"\n:      S &STR3# = \"SCTASK Closed Skipped -> RITM Closed Complete\"\n:      S &DESCRIPTION_FOOTER# = \"&NL#&DELIMITER#&NL#&STR1#&NL#&STR2#&NL#&STR3#\"\n\n:      S &DESCRIPTION# = STR_CAT(&DESCRIPTION#,&DESCRIPTION_FOOTER#)\n:    ELSE\n:      S &DESCRIPTION# = &DESCRIPTION#\n:    ENDIF\n\n:    IF &SHORT_DESCRIPTION# = \"\" OR \" \"\n!      Error handling can be executed before SCTASK details (not included in the REST call from ReqIT) are read from GSN\n:      IF &SHORT_DESCRIPTION_ORG# = \"\" OR \" \"\n:        S &Cat_Item_Name# = JSON_GET_VALUE(&Cat_Item_Variables#, $.cat_item.name)\n:        S &SHORT_DESCRIPTION_ORG# = &Cat_Item_Name#\n:      ENDIF\n:      S &SHORT_DESCRIPTION# = \"ERROR: &SHORT_DESCRIPTION_ORG#\"\n:    ELSE\n:      S &SHORT_DESCRIPTION# = &SHORT_DESCRIPTION#\n:    ENDIF\n\n:    IF &BUSINESS_SERVICE# = \"\" OR \" \"\n:      S &BUSINESS_SERVICE# = &BUSINESS_SERVICE_ORG#\n:    ELSE\n:      S &BUSINESS_SERVICE# = &BUSINESS_SERVICE#\n:    ENDIF\n\n:    S &OUTPUT# = &OUTPUT#\n\n:P \"====================================================================================================================================================================================\"\n:P \"Status:  '&STATUS#'\"\n\n:S &REQ_TEXT# = &NOTES#\n:INC REPLACE-FORBIDDEN-CHARACTERS.REQIT.INCL\n:S &NOTES# = &REQ_TEXT#\n\n:S &REQ_TEXT# = &EXT_NOTES#\n:INC REPLACE-FORBIDDEN-CHARACTERS.REQIT.INCL\n:S &EXT_NOTES# = &REQ_TEXT#\n\n:S &REQ_TEXT# = &DESCRIPTION#\n:INC REPLACE-FORBIDDEN-CHARACTERS.REQIT.INCL\n:S &DESCRIPTION# = &REQ_TEXT#\n\n:S &REQ_TEXT# = &SHORT_DESCRIPTION#\n:INC REPLACE-FORBIDDEN-CHARACTERS.REQIT.INCL\n:S &SHORT_DESCRIPTION# = &REQ_TEXT#\n\n!Output (expected json) always empty to avoid errors when ouptut formatted and to push error handling feedback\n:S &OUTPUT# = \"{}\"\n\n!To add variables to Context Variables of the job\n:PUB &EXT_NOTES#,, \"TOP\"\n:PUB &NOTES#,, \"TASK\"\n:PUB &DESCRIPTION#,,\"TASK\"\n:PUB &SHORT_DESCRIPTION#,,\"TASK\"\n:PUB &ASSIGNMENT_GROUP#,,\"TASK\"\n:PUB &ASSIGNED_TO#,, \"TASK\"\n:PUB &BUSINESS_SERVICE#,,\"TASK\"\n:PUB &OUTPUT#,,\"TASK\"\n\n:PUB &STATUS#,,\"TOP\"",
    "highRisk": false,
    "weight": "1",
    "taskType": "REST_WEB_SERVICE_CALL",
    "priority": "0",
    "endpoint": "MainRest.Gsn.Gbl.ep",
    "passBy": false,
    "lazyLoad": false,
    "customFieldValues": {
    },
    "serverNodeType": "REST_WEB_SERVICE",
    "verboseMode": false,
    "eagerScriptExecution": false,
    "passResourceDependenciesToChildren": false,
    "domain": "Bien_Domain",
    "endpointType": "REST_WEB_SERVICE",
    "autoArchive": false,
    "useScripts": true,
    "sequentialProcessing": false,
    "owner": "rrogozin",
    "turnOffDurationEstimation": false,
    "folder": "REQIT",
    "passActionsToChildren": false,
    "actions": 
    [
      {
        "domainClass": "ProcessingTemplateAction",
        "processingEventType": "PROCESSING_FAILED",
        "workflow": "[Bien_Domain]EH-UPDATE-SCTASK.GSN.REQIT.REST",
        "processingEventCategory": "PROCESSING",
        "processingActionOrder": 0,
        "skip": false,
        "processingActionType": "RESTART",
        "domain": "Bien_Domain",
        "processingCommand": {
          "restartMode": "COUNTER",
          "restartCounter": 3,
          "restartDelay": 300000,
          "restartDelayMode": "FINISH_TO_START",
          "actionTargetType": "SELF",
          "restartFailedOnly": false,
          "keepForcedStatus": true,
          "operator": "",
          "restartType": "RESTART_FROM_BEGINNING"
        }
      },
      {
        "domainClass": "ProcessingTemplateAction",
        "processingEventType": "PROCESSING_FAILED",
        "condition": {
          "criteria": 
          [
            {
              "fieldName": "timesRestarted",
              "value": "3",
              "operator": "EQ_NUM"
            }
          ],
          "operator": "AND"
        },
        "workflow": "[Bien_Domain]EH-UPDATE-SCTASK.GSN.REQIT.REST",
        "processingEventCategory": "PROCESSING",
        "processingActionOrder": 2,
        "skip": false,
        "processingActionType": "SET_CONTEXT_VARIABLE_VALUE",
        "domain": "Bien_Domain",
        "processingCommand": {
          "variable": "EHTrigger",
          "actionTargetType": "RELATED",
          "keepForcedStatus": true,
          "value": 1,
          "operator": "SET_NUM",
          "restartType": "RESTART_FROM_BEGINNING",
          "relation": {
            "relationType": "ROOT"
          }
        }
      },
      {
        "domainClass": "ProcessingTemplateAction",
        "processingEventType": "PROCESSING_FAILED",
        "condition": {
          "criteria": 
          [
            {
              "fieldName": "timesRestarted",
              "value": "3",
              "operator": "LT_NUM"
            }
          ],
          "operator": "AND"
        },
        "workflow": "[Bien_Domain]EH-UPDATE-SCTASK.GSN.REQIT.REST",
        "processingEventCategory": "PROCESSING",
        "processingActionOrder": 3,
        "skip": false,
        "processingActionType": "SET_CONTEXT_VARIABLE_VALUE",
        "domain": "Bien_Domain",
        "processingCommand": {
          "variable": "EHTrigger",
          "actionTargetType": "RELATED",
          "keepForcedStatus": true,
          "value": 0,
          "operator": "SET_NUM",
          "restartType": "RESTART_FROM_BEGINNING",
          "relation": {
            "relationType": "ROOT"
          }
        }
      },
      {
        "domainClass": "ProcessingTemplateAction",
        "processingEventType": "PROCESSING_FAILED",
        "condition": {
          "criteria": 
          [
            {
              "fieldName": "timesRestarted",
              "value": "3",
              "operator": "EQ_NUM"
            }
          ],
          "operator": "AND"
        },
        "workflow": "[Bien_Domain]EH-UPDATE-SCTASK.GSN.REQIT.REST",
        "processingEventCategory": "PROCESSING",
        "processingActionOrder": 1,
        "skip": false,
        "processingActionType": "REMOVE_TAG",
        "domain": "Bien_Domain",
        "processingCommand": {
          "actionTargetType": "SELF",
          "keepForcedStatus": true,
          "value": "NotMonitored",
          "operator": "",
          "restartType": "RESTART_FROM_BEGINNING"
        }
      }
    ],
    "dependencies": 
    [
      {
        "domainClass": "ProcessingTemplateDependency",
        "processingType": "TASK",
        "groupId": "a7563435-8c0b-4849-b913-d3d996e9520b",
        "resource": "ServiceNow.Gbl.sem",
        "serverNodeType": "REST_WEB_SERVICE",
        "dependencyType": "RESOURCE",
        "name": "ServiceNow.Gbl.sem",
        "domain": "Bien_Domain",
        "processingStatus": "COMPLETED",
        "workflow": "[Bien_Domain]EH-UPDATE-SCTASK.GSN.REQIT.REST",
        "resourceType": "BINARY_SEMAPHORE",
        "sortKey": "03.BINARY_SEMAPHORE.ServiceNow.Gbl.sem",
        "taskType": "REST_WEB_SERVICE_CALL",
        "semaphoreState": "ON"
      }
    ]
  },
  {
    "domainClass": "ProcessingTemplate",
    "id": "[Bien_Domain]EH-UPDATE-TICKET.REQIT.WIF",
    "simpleId": "EH-UPDATE-TICKET.REQIT.WIF",
    "processingType": "WORKFLOW",
    "preloadCounter": 0,
    "processingCommand": {
    },
    "keepResourcesOnFailure": false,
    "onHold": false,
    "tags": 
    [
      "REQIT"
    ],
    "preScript": "!Retrieving the name, RunID, status and return code of the task that triggered this task\n!${parentName}\n!${parentId}\n!${parentTemplate}\n!${exitCode}\n\n!codes which do not exist\n!${parentExitCode}\n!${parentExitMessage}\n\n!:PSET &EXT_NOTES# = \"AUTOMATION ERROR: object ${parentName} with RunID ${parentId} failed with Ret Code &CAUSE_RETCODE# and Status: &UC_CAUSE_STATE - &STATUSTEXT#\"\n:PSET &EXT_NOTES# = \"AUTOMATION ERROR: object ${parentName} with RunID ${parentId} failed.\"\n:P \"------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\"\n:P \"&&EXT_NOTES#:        &EXT_NOTES#\"\n!:PUT_VAR_COL &ACTIVE_TICKETS#,&TRIGGER_RUNID#,3,\"ERROR: ${parentName} with RunID ${parentId} failed with Ret Code &CAUSE_RETCODE# and Status: &UC_CAUSE_STATE - &STATUSTEXT#\"\n:PUT_VAR_COL &ACTIVE_TICKETS#,&TRIGGER_RUNID#,3,\"ERROR: ${parentName} with RunID ${parentId} failed with Ret Code &CAUSE_RETCODE#\"\n:P \"&RITM# status (Trigger RunID &TRIGGER_RUNID#) has been changed in &ACTIVE_TICKETS#\"\n!:P \"to 'ERROR: ${parentName} with RunID ${parentId} failed with Ret Code &CAUSE_RETCODE# and Status: &UC_CAUSE_STATE - &STATUSTEXT#'\"\n:P \"to 'ERROR: ${parentName} with RunID ${parentId} failed.'\"\n:P \"------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\"",
    "highRisk": false,
    "weight": "1",
    "priority": "0",
    "workflowType": "SWITCH",
    "passBy": false,
    "lazyLoad": false,
    "customFieldValues": {
    },
    "verboseMode": false,
    "eagerScriptExecution": false,
    "passResourceDependenciesToChildren": false,
    "domain": "Bien_Domain",
    "autoArchive": false,
    "useScripts": true,
    "sequentialProcessing": false,
    "owner": "rrogozin",
    "turnOffDurationEstimation": false,
    "folder": "REQIT",
    "passActionsToChildren": false,
    "items": 
    [
      {
        "domainClass": "ProcessingTemplateItem",
        "processingType": "TASK",
        "passBy": false,
        "lazyLoad": false,
        "serverNodeType": "REST_WEB_SERVICE",
        "verboseMode": false,
        "sortOrder": 1,
        "name": "2_EH-UPDATE-TICKET.REQIT.WIF|EH-UPDATE-RITM.GSN.REQIT.REST",
        "processingTemplate": "EH-UPDATE-RITM.GSN.REQIT.REST",
        "forceLoad": false,
        "domain": "Bien_Domain",
        "switchCondition": {
          "criteria": 
          [
            {
              "fieldName": "${TRIGGER_TYPE#}",
              "value": "DIRECT",
              "operator": "EQ"
            }
          ],
          "operator": "AND"
        },
        "keepResourcesOnFailure": false,
        "parentProcessingType": "WORKFLOW",
        "onHold": false,
        "optional": false,
        "workflow": "[Bien_Domain]EH-UPDATE-TICKET.REQIT.WIF",
        "highRisk": false,
        "skipProcessingVariables": false,
        "parentWorkflowType": "SWITCH",
        "weight": "1",
        "title": "EH-UPDATE-RITM.GSN.REQIT.REST",
        "taskType": "REST_WEB_SERVICE_CALL",
        "priority": "0"
      },
      {
        "domainClass": "ProcessingTemplateItem",
        "processingType": "TASK",
        "passBy": false,
        "lazyLoad": false,
        "serverNodeType": "REST_WEB_SERVICE",
        "verboseMode": false,
        "sortOrder": 0,
        "name": "3_EH-UPDATE-TICKET.REQIT.WIF|EH-UPDATE-SCTASK.GSN.REQIT.REST",
        "processingTemplate": "EH-UPDATE-SCTASK.GSN.REQIT.REST",
        "forceLoad": false,
        "domain": "Bien_Domain",
        "switchCondition": {
          "criteria": 
          [
            {
              "fieldName": "${TRIGGER_TYPE#}",
              "value": "DIRECT",
              "operator": "NE"
            }
          ],
          "operator": "AND"
        },
        "keepResourcesOnFailure": false,
        "parentProcessingType": "WORKFLOW",
        "onHold": false,
        "optional": false,
        "workflow": "[Bien_Domain]EH-UPDATE-TICKET.REQIT.WIF",
        "highRisk": false,
        "skipProcessingVariables": false,
        "parentWorkflowType": "SWITCH",
        "weight": "1",
        "title": "EH-UPDATE-SCTASK.GSN.REQIT.REST",
        "taskType": "REST_WEB_SERVICE_CALL",
        "priority": "0"
      }
    ],
    "dependencies": 
    [
      {
        "domainClass": "ProcessingTemplateDependency",
        "processingType": "WORKFLOW",
        "groupId": "eea16737-0367-430a-ae6c-16d36105d70e",
        "resource": "EH-UPDATE-TICKET.REQIT.STOCK",
        "dependencyType": "RESOURCE",
        "name": "EH-UPDATE-TICKET.REQIT.STOCK",
        "domain": "Bien_Domain",
        "processingStatus": "COMPLETED",
        "workflow": "[Bien_Domain]EH-UPDATE-TICKET.REQIT.WIF",
        "resourceType": "STOCK",
        "sortKey": "01.STOCK.EH-UPDATE-TICKET.REQIT.STOCK",
        "resourcePermits": "1",
        "workflowType": "SWITCH"
      }
    ]
  }
]